<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADIAAAAyCAYAAAAeP4ixAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAZdEVYdFNvZnR3YXJlAEFkb2JlIEltYWdlUmVhZHlxyWU8AAADnElEQVRoQ93aTUsVURgHcHf1
        ATKKSAqiN9y06AtEmyho06KMFi1a9CKaGEm1KBMkggINrEURLVpVtAmCyJfUMDIr1LLMwiRaVNcozbf0
        9PxvZ+bOufc/V2fm3LnqwA/08ZlznofrzJyZOwWFh5oXBRoMaYXYJ+pEo3gvEmJCw8+I4W/IQS72YWMF
        RoMBFIoy8VyokLpEpcBYbI45ocE5KBINYkyw4sLAWBgTY7M5s6LBLJaKc+KPYMXYgLExB+ZiNVA06GOz
        6BZs8lzAXJiT1ZKBBom9YlSwCXMJc2JuVpOBBtOUixnBJooD5kYNrDYXDXqUCjZ4PqAWVmMSDWo4z+fz
        k0iHWlATq9W3kU0iH8fEbFATPQFkBMQS0SPYQPMBakONRt3GL9ppwQYIbF1Zm9pz+bXaXvOC/j2CM8Ko
        2/hFrBZW/qVK6rrVyPhf5WxNvQlVdPQJzQ0BNaJWt3ZvE4DFHNsxkDXHWlViZFK3kNpq73+i+SFdEW7t
        3iaWCStLjx21Xbp0c2t5k6D5IaFWd6HpbQSrWLZDYLsuvNSlm1tH/0+aH4F7ofQ20ilYcmAxNoKajUZw
        4LDEUGJsBJIHvdPIAR20IuZGULvbSL0OWhFzI6jdbeSxDloRcyN4BuA28kEHrYi5EdTuNvJLB62IuRHU
        7jbCEkLza6Stb5jmW5CbRoorn6qp6Rldfmq70fSF5keEZ2ZuI7910Jqaex91+f+3r8MTaktVB82N6LvI
        zcHu2H3xlbr0YFCdvTOgNhxvpzkWGAc7TmEsaSEwTr9WL4gxMy6IVpcojq2nnqmym33qYEOvWnW4heZY
        YCxRrC4a4cj1t2piKnXm6h0aUevL22huRMlnxU4jYG0Zj4JHPbe5zlb/8DPNjyBjGQ/Wbqx2+lwQG3t+
        0PwI6I0Vbhut3OpurGiXf6tpXX5qu/poiOaH5HurC7ihZzsFVnW7X3kv7oPfxpJXfJYbku/DB8BBb+VT
        gW3nO1X13QFVceudWlvaSnNCQo1ZHwcBHn6xneeTWR/QwaJ5ZAp4ULzgH2I7SsR8+1oBNbFaszYC1q4t
        FqAWVmMSDaY5IfL5yWBu1MBqc9EgsV/k45jBnJib1WSgQR/FIs6zGebCnKyWDDSYBb7ErxbWLpoExsYc
        OXthwAtL52tiXLBiwsBYGDOWVzjSLRdYgUZ9qeakwFhsjjmhwZBWCnx9jFtP72tOk5r3NSfkIBf7sLEC
        o8GFp7ngHxiLxx01+lxVAAAAAElFTkSuQmCC
</value>
  </data>
</root>